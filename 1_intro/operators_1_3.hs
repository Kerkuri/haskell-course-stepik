module OperatorDemo where

-- Можно опредлелять собственные операторы.
-- Для этого можно использовать следующие символы:
-- { - 
-- ! # $ % & * + . / < = > ? @ \ ^ | - ~ :
-- }

-- infix* - это для определения приоритета оператора.
-- infix(l/r) - для лево/право-ассоциативного оператора
--    (здесь ассоциативность стоит понимать как то, с какой стороны
--    будет вычисляться оператор)
-- infix - для оператора без ассоциативности
--    (примеры таких операторов - операторы сравнения: 
--    из них нельзя сделать "цепочку" из операторов)

-- Как получить приоритет оператора/функции:
-- :i <func>

-- Определим оператор суммы квадратов:
infixl 6 *+*

-- a *+* b = a ^ 2 + b ^ 2
-- Определение оператора в функциональном (префиксном) стиле:
(*+*) a b = a ^ 2 + b ^ 2

-- Оператор модуля разности:
infixl 6 |-|

(|-|) a b = abs (a - b)


-- Сечение операторов - частичное применение операторов:
divide2by = (2 /)
divideBy2 = (/ 2)

-- Специальный оператор для избавления от скобок - $:
sinFromHalf x = sin $ x / 2
-- Аналог функции ниже:
-- sinFromHalf x = sin (x / 2)

-- $ - правоассоциативный оператор: 
{- f (g x (h y)) == f $ g x (h y) == f $ g x $ h y -}